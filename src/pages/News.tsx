import React, { useState } from 'react';
import { Card, CardContent, CardHeader } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Calendar, ArrowRight, Search, ChevronRight, ChevronDown } from 'lucide-react';
import { Pagination, PaginationContent, PaginationItem, PaginationLink, PaginationNext, PaginationPrevious } from '@/components/ui/pagination';
import { Link } from 'react-router-dom';
import Header from '@/components/Header';
import Footer from '@/components/Footer';

const News = () => {
  const [currentPage, setCurrentPage] = useState(1);
  const [searchTerm, setSearchTerm] = useState('');
  const itemsPerPage = 6;

  const allNews = [
    {
      id: 1,
      title: "–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ 1–°:ERP 2.5",
      excerpt: "–û–±–∑–æ—Ä –∫–ª—é—á–µ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ 1–°:ERP –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã. –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º.",
      content: "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π...",
      date: "2024-01-15",
      category: "1–°",
      image: "üîß",
      author: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤"
    },
    {
      id: 2,
      title: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ë–∏—Ç—Ä–∏–∫—Å24 —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏",
      excerpt: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ë–∏—Ç—Ä–∏–∫—Å24 —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏. REST API, –≤–µ–±-—Ö—É–∫–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.",
      content: "–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...",
      date: "2024-01-10",
      category: "–ë–∏—Ç—Ä–∏–∫—Å24",
      image: "üîó",
      author: "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞"
    },
    {
      id: 3,
      title: "–¢—Ä–µ–Ω–¥—ã –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ 2024",
      excerpt: "–ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±—É–¥—É—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã –≤ —ç—Ç–æ–º –≥–æ–¥—É –∏ –∫–∞–∫ —ç—Ç–æ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à –±–∏–∑–Ω–µ—Å. React 18, TypeScript, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
      content: "–ê–Ω–∞–ª–∏–∑ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤...",
      date: "2024-01-05",
      category: "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      image: "üöÄ",
      author: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤"
    },
    {
      id: 4,
      title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É—á–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é 1–°:–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è 8",
      excerpt: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–≥–æ —É—á–µ—Ç–∞. –¢–∏–ø–æ–≤—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –¥–æ—Ä–∞–±–æ—Ç–∫–∏.",
      content: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏...",
      date: "2024-01-03",
      category: "1–°",
      image: "üìä",
      author: "–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞"
    },
    {
      id: 5,
      title: "CRM-—Å–∏—Å—Ç–µ–º–∞: –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ",
      excerpt: "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö CRM-—Å–∏—Å—Ç–µ–º –¥–ª—è –º–∞–ª–æ–≥–æ –∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞. –ë–∏—Ç—Ä–∏–∫—Å24, amoCRM, Pipedrive - —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å?",
      content: "–î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ CRM...",
      date: "2024-01-01",
      category: "CRM",
      image: "üìà",
      author: "–ò–≥–æ—Ä—å –ú–æ—Ä–æ–∑–æ–≤"
    },
    {
      id: 6,
      title: "–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞",
      excerpt: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. React Native, Flutter –∏–ª–∏ –Ω–∞—Ç–∏–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å?",
      content: "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...",
      date: "2023-12-28",
      category: "–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      image: "üì±",
      author: "–ê–Ω–Ω–∞ –í–æ–ª–∫–æ–≤–∞"
    },
    {
      id: 7,
      title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å 1–°: –∑–∞—â–∏—â–∞–µ–º –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
      excerpt: "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º–∞—Ö 1–°. –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥.",
      content: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ 1–°...",
      date: "2023-12-25",
      category: "1–°",
      image: "üîê",
      author: "–°–µ—Ä–≥–µ–π –ù–∏–∫–æ–ª–∞–µ–≤"
    },
    {
      id: 8,
      title: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      excerpt: "–ú–µ—Ç–æ–¥—ã –ø–æ–≤—ã—à–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Ä–∞–±–æ—Ç—ã –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ, CDN, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.",
      content: "–¢–µ—Ö–Ω–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...",
      date: "2023-12-20",
      category: "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      image: "‚ö°",
      author: "–í–ª–∞–¥–∏–º–∏—Ä –°–º–∏—Ä–Ω–æ–≤"
    },
    {
      id: 9,
      title: "–¶–∏—Ñ—Ä–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
      excerpt: "–ö–∞–∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ IT-—Ä–µ—à–µ–Ω–∏—è –ø–æ–º–æ–≥–∞—é—Ç –º–∞–ª–æ–º—É –±–∏–∑–Ω–µ—Å—É –∫–æ–Ω–∫—É—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ä—ã–Ω–∫–µ. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å.",
      content: "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏...",
      date: "2023-12-18",
      category: "–ë–∏–∑–Ω–µ—Å",
      image: "üè¢",
      author: "–û–ª—å–≥–∞ –§–µ–¥–æ—Ä–æ–≤–∞"
    }
  ];

  const categories = {
    "–í—Å–µ": { subcategories: [] },
    "1–°": {
      subcategories: [
        "1–°:–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è",
        "1–°:ERP",
        "1–°:–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–µ–π",
        "1–°:–ó–∞—Ä–ø–ª–∞—Ç–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º"
      ]
    },
    "–ë–∏—Ç—Ä–∏–∫—Å24": {
      subcategories: [
        "CRM",
        "–ü—Ä–æ–µ–∫—Ç—ã –∏ –∑–∞–¥–∞—á–∏",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
        "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"
      ]
    },
    "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": {
      subcategories: [
        "Frontend",
        "Backend",
        "Fullstack",
        "UI/UX"
      ]
    },
    "–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": {
      subcategories: [
        "iOS",
        "Android",
        "React Native",
        "Flutter"
      ]
    },
    "–ë–∏–∑–Ω–µ—Å": {
      subcategories: [
        "–°—Ç—Ä–∞—Ç–µ–≥–∏—è",
        "–ü—Ä–æ—Ü–µ—Å—Å—ã",
        "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞",
        "–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥"
      ]
    }
  };

  const [selectedCategory, setSelectedCategory] = useState("–í—Å–µ");
  const [expandedCategories, setExpandedCategories] = useState<string[]>([]);

  const toggleCategory = (category: string) => {
    setExpandedCategories(prev => 
      prev.includes(category) 
        ? prev.filter(c => c !== category)
        : [...prev, category]
    );
  };

  const filteredNews = allNews.filter(article => {
    const matchesSearch = article.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         article.excerpt.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = selectedCategory === "–í—Å–µ" || article.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  const totalPages = Math.ceil(filteredNews.length / itemsPerPage);
  const startIndex = (currentPage - 1) * itemsPerPage;
  const currentNews = filteredNews.slice(startIndex, startIndex + itemsPerPage);

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      {/* Hero Section */}
      <section className="bg-black text-white py-16">
        <div className="container mx-auto px-4">
          <div className="text-center">
            <h1 className="text-4xl md:text-6xl font-bold mb-4">–ù–æ–≤–æ—Å—Ç–∏ IT-Pandas</h1>
            <p className="text-xl text-gray-300 max-w-2xl mx-auto">
              –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ IT, –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –º–Ω–µ–Ω–∏—è
            </p>
          </div>
        </div>
      </section>

      {/* Search Section */}
      <section className="py-8 bg-white border-b">
        <div className="container mx-auto px-4">
          <div className="max-w-md">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" size={20} />
              <input
                type="text"
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–≤–æ—Å—Ç—è–º..."
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-black focus:border-transparent"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
          </div>
        </div>
      </section>

      {/* Main Content */}
      <section className="py-12">
        <div className="container mx-auto px-4">
          <div className="flex gap-8">
            {/* News Grid - Left Column */}
            <div className="flex-1">
              {currentNews.length === 0 ? (
                <div className="text-center py-12">
                  <p className="text-xl text-gray-600">–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                </div>
              ) : (
                <>
                  <div className="grid md:grid-cols-2 gap-8 mb-12">
                    {currentNews.map((article) => (
                      <Card key={article.id} className="hover:shadow-lg transition-shadow duration-300 bg-white">
                        <CardHeader className="pb-0">
                          <div className="text-4xl mb-4">{article.image}</div>
                          <div className="flex items-center text-sm text-gray-500 mb-2">
                            <Calendar size={16} className="mr-1" />
                            {new Date(article.date).toLocaleDateString('ru-RU')}
                            <span className="ml-4 bg-black text-white px-2 py-1 rounded text-xs">
                              {article.category}
                            </span>
                          </div>
                        </CardHeader>
                        <CardContent>
                          <h3 className="text-xl font-bold text-black mb-3 line-clamp-2">
                            {article.title}
                          </h3>
                          <p className="text-gray-600 mb-3 line-clamp-3">
                            {article.excerpt}
                          </p>
                          <p className="text-sm text-gray-500 mb-4">
                            –ê–≤—Ç–æ—Ä: {article.author}
                          </p>
                          <Link to={`/news/${article.id}`}>
                            <Button variant="outline" className="w-full border-black text-black hover:bg-black hover:text-white">
                              –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
                              <ArrowRight size={16} className="ml-2" />
                            </Button>
                          </Link>
                        </CardContent>
                      </Card>
                    ))}
                  </div>

                  {/* Pagination */}
                  {totalPages > 1 && (
                    <Pagination className="justify-center">
                      <PaginationContent>
                        {currentPage > 1 && (
                          <PaginationItem>
                            <PaginationPrevious 
                              href="#" 
                              onClick={(e) => {
                                e.preventDefault();
                                setCurrentPage(currentPage - 1);
                              }}
                            />
                          </PaginationItem>
                        )}
                        
                        {[...Array(totalPages)].map((_, index) => (
                          <PaginationItem key={index + 1}>
                            <PaginationLink
                              href="#"
                              isActive={currentPage === index + 1}
                              onClick={(e) => {
                                e.preventDefault();
                                setCurrentPage(index + 1);
                              }}
                            >
                              {index + 1}
                            </PaginationLink>
                          </PaginationItem>
                        ))}
                        
                        {currentPage < totalPages && (
                          <PaginationItem>
                            <PaginationNext 
                              href="#" 
                              onClick={(e) => {
                                e.preventDefault();
                                setCurrentPage(currentPage + 1);
                              }}
                            />
                          </PaginationItem>
                        )}
                      </PaginationContent>
                    </Pagination>
                  )}
                </>
              )}
            </div>

            {/* Categories Sidebar - Right Column */}
            <div className="w-80">
              <Card className="bg-white sticky top-8">
                <CardHeader>
                  <h3 className="text-lg font-semibold text-black">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
                </CardHeader>
                <CardContent className="p-0">
                  <div className="space-y-1">
                    {Object.entries(categories).map(([category, { subcategories }]) => (
                      <div key={category}>
                        <div className="flex items-center justify-between">
                          <button
                            onClick={() => {
                              setSelectedCategory(category);
                              setCurrentPage(1);
                            }}
                            className={`flex-1 text-left px-4 py-2 hover:bg-gray-50 transition-colors ${
                              selectedCategory === category 
                                ? 'bg-black text-white font-medium' 
                                : 'text-gray-700'
                            }`}
                          >
                            {category}
                          </button>
                          {subcategories.length > 0 && (
                            <button
                              onClick={() => toggleCategory(category)}
                              className="p-2 hover:bg-gray-50 rounded"
                            >
                              {expandedCategories.includes(category) ? (
                                <ChevronDown size={16} />
                              ) : (
                                <ChevronRight size={16} />
                              )}
                            </button>
                          )}
                        </div>
                        
                        {subcategories.length > 0 && expandedCategories.includes(category) && (
                          <div className="ml-4 border-l border-gray-200">
                            {subcategories.map((subcategory) => (
                              <button
                                key={subcategory}
                                onClick={() => {
                                  setSelectedCategory(subcategory);
                                  setCurrentPage(1);
                                }}
                                className={`block w-full text-left px-4 py-2 text-sm hover:bg-gray-50 transition-colors ${
                                  selectedCategory === subcategory 
                                    ? 'bg-gray-100 text-black font-medium' 
                                    : 'text-gray-600'
                                }`}
                              >
                                {subcategory}
                              </button>
                            ))}
                          </div>
                        )}
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default News;
